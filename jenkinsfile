pipeline {
    agent any
    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }
    stages {
        stage('Create .env File to auth-service') {
            steps {
                script {
                    sh "ls -a"

                    def envContent = """\
                    PORT="8081"
                    URL_DB="mongodb://root:30122002@103.98.160.26:27020"
                    DB_NAME="S3_AUTH"
                    NODE_ENV="production"
                    """
                    writeFile file: './auth-service/.env', text: envContent
                }
            }
        }
         stage('Create .env File to tour-service') {
            steps {
                script {
                    sh "ls -a"

                    def envContent = """\
                        PORT="8082"
                        URL_DB="mongodb://root:30122002@103.98.160.26:27020"
                        DB_NAME="S3_TOUR"
                        NODE_ENV="production"
                        GRPC_PORT_AUTH="10002"

                    """
                    writeFile file: './auth-service/.env', text: envContent
                }
            }
        }

         stage('Create .env File to agent-service') {
            steps {
                script {
                    sh "ls -a"

                    def envContent = """\
                    PORT="8083"
                    URL_DB="mongodb://root:30122002@103.98.160.26:27020"
                    DB_NAME="S3_BOOKING"
                    NODE_ENV="production"
                    GRPC_PORT_AUTH="10002"
                    """
                    writeFile file: './auth-service/.env', text: envContent
                }
            }
        }


        stage('Build and Test') {
            steps {
                script {
                    // Build and start the services using Docker Compose
                    sh "docker compose up -d"
                    
                    // Wait for services to be up (adjust this as needed)
                    sh 'sleep 5'

                    sh 'docker ps'
                    sh 'docker images'

                    
                    // Run tests here (replace with your actual test commands)
                    // sh 'docker compose -f ${DOCKER_COMPOSE_FILE} exec auth npm run test'
                }
            }
        }
        // stage('Deploy') {
        //     steps {
        //         // You can add deployment steps here if needed
        //     }
        // }
    }
    post {
        success {
            // If all stages are successful, stop and remove the containers
            script {
                sh "docker compose -f ${DOCKER_COMPOSE_FILE} down"
            }
        }
        failure {
            // If the build fails, stop and remove the containers
            script {    
                sh "docker compose -f ${DOCKER_COMPOSE_FILE} down"
            }
        }
    }
}
